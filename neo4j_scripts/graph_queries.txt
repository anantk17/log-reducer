Home directory for neo4j instance:
/var/lib/neo4j

Clear Database:
sudo rm -rf /var/lib/neo4j/data/databases/graph.db

Queries:

Count the number of nodes with ‘y’ number of outgoing hops:
MATCH (x)-[:SYSCALL*y]->() RETURN Count(x)

Replace x with the number of hops. Here SYSCALL is the type of relationship
0: 4107
1: 2932
2: 81055
3: 0

Longest Path: 2 hops
Shortest Path: 1 hop



Count the number of nodes with outgoing number of hops between 0 and 1:

MATCH (x)-[:SYSCALL*0..1]->() RETURN Count(x)

7039 = 4107 + 2932

Count the total number of edges

MATCH (n)-[r]->() RETURN COUNT(r)
5868
square brackets represent relationships, curly brackets represent nodes

To find the number of disjoint graphs and number of nodes in each disjoint graph:

https://neo4j.com/docs/graph-algorithms/current/algorithms/connected-components/

CALL algo.unionFind('NODE', 'SYSCALL', {write:true, partitionProperty:"partition"})
YIELD nodes, setCount, loadMillis, computeMillis, writeMillis;

nodes	setCount	loadMillis	computeMillis	writeMillis
382	    382	        127	        0	                30

Number of nodes where the incoming edge is EVENT_READ and EVENT_WRITE

MATCH (n)<-[r]-() WHERE r.type = 'EVENT_READ' RETURN COUNT(r)
Result: 2618

MATCH (n)<-[r]-() WHERE r.type = 'EVENT_WRITE' RETURN COUNT(r)
Result: 888

Node that generates the maximum number of edges:
used this query: MATCH (n)-[r]->() RETURN COUNT(r), n.name
we just presented the name and sorted by count

355	8718:sshd: theia@pts/1
355	2f90a2a9-b9b6-579c-bb65-0b0cd8fc84d9_c0a87a03-1600-c0a8-7a01-a4b800000000